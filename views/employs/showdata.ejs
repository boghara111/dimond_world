<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Table to Excel and PDF</title>

    <!-- Include SheetJS (xlsx) library -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.2/xlsx.full.min.js"></script>
    
    <!-- Include jsPDF library for PDF generation -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>

    <!-- Include jsPDF AutoTable Plugin -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.21/jspdf.plugin.autotable.min.js"></script>

    <!-- Include Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

    <style>
        .fullborder {
            border-collapse: collapse;
            width: 100%;
        }

        .fullborder th, .fullborder td {
            border: 1px solid black;
            padding: 8px;
            text-align: center;
        }
    </style>
</head>
<body class="m-2">
<!-- Dropdown to select a month -->
<form method="GET" action="/employs">
    <label for="monthDropdown">Select Month:</label>
    <select name="month" id="monthDropdown" onchange="this.form.submit()">
        <option value="">All Months</option>
        <option value="January" <%= selectedMonth === 'January' ? 'selected' : '' %>>January</option>
        <option value="February" <%= selectedMonth === 'February' ? 'selected' : '' %>>February</option>
        <option value="March" <%= selectedMonth === 'March' ? 'selected' : '' %>>March</option>
        <option value="April" <%= selectedMonth === 'April' ? 'selected' : '' %>>April</option>
        <option value="May" <%= selectedMonth === 'May' ? 'selected' : '' %>>May</option>
        <option value="June" <%= selectedMonth === 'June' ? 'selected' : '' %>>June</option>
        <option value="July" <%= selectedMonth === 'July' ? 'selected' : '' %>>July</option>
        <option value="August" <%= selectedMonth === 'August' ? 'selected' : '' %>>August</option>
        <option value="September" <%= selectedMonth === 'September' ? 'selected' : '' %>>September</option>
        <option value="October" <%= selectedMonth === 'October' ? 'selected' : '' %>>October</option>
        <option value="November" <%= selectedMonth === 'November' ? 'selected' : '' %>>November</option>
        <option value="December" <%= selectedMonth === 'December' ? 'selected' : '' %>>December</option>
    </select>
</form>

    <!-- Buttons for exporting to Excel and PDF -->
    <div class="d-flex justify-content-center align-items-center gap-2">
        <button id="export-btn-excel" class="btn btn-dark text-light mb-1">Export to Excel</button>
        <button id="export-btn-pdf" class="btn btn-dark text-light mb-1">Export to PDF</button>
    </div>
    
    
    <!-- Table with the data -->
    <table class="fullborder">
        <thead>
            <tr>
                <th>No</th>
                <th>Bank</th>
                <th>Name</th>
                <th>A</th>
                <th>B</th>
                <th>C</th>
                <th>D</th>
                <th>E</th>
                <th>Dimond</th>
                <th>Salary</th>
            </tr>
        </thead>
        <tbody>
            <!-- Loop through allListings and display the data dynamically -->
            <% 
            allListings.sort((a, b) => a.no - b.no); 
            let totalA = 0, totalB = 0, totalC = 0, totalD = 0, totalE = 0; 
            for (let listing of allListings) { 
                let sumA = 0, sumB = 0, sumC = 0, sumD = 0, sumE = 0;
            %>
                <tr>
                    <% if (currUser && currUser._id.equals(listing.owner._id)) { %>
                    <td><%= listing.no %></td>
                    <td><%= listing.bank %></td>
                    <td><%= listing.name %></td>
                    <td>
                        <% 
                        for (let j = 1; j <= 33; j++) { 
                            sumA += listing[`A${j}`] || 0; 
                        } 
                        %>
                        <%= sumA %>    
                    </td>
                    <td>
                        <% 
                        for (let j = 1; j <= 33; j++) { 
                            sumB += listing[`B${j}`] || 0; 
                        } 
                        %>
                        <%= sumB %>    
                    </td>
                    <td>
                        <% 
                        for (let j = 1; j <= 33; j++) { 
                            sumC += listing[`C${j}`] || 0; 
                        } 
                        %>
                        <%= sumC %>    
                    </td>
                    <td>
                        <% 
                        for (let j = 1; j <= 33; j++) { 
                            sumD += listing[`D${j}`] || 0; 
                        } 
                        %>
                        <%= sumD %>    
                    </td>
                    <td>
                        <% 
                        for (let j = 1; j <= 33; j++) { 
                            sumE += listing[`E${j}`] || 0; 
                        } 
                        %>
                        <%= sumE %>    
                    </td>
                    <td>
                        <%= sumA + sumB + sumC + sumD + sumE %>
                    </td>
                    <td>
                        <% 
                        let salary = 0;
                        const userPrice = allPrices.find(price => currUser && currUser._id.equals(price.owner._id));
                        
                        if (userPrice) {
                            salary = sumA * userPrice.price1 + sumB * userPrice.price2 + sumC * userPrice.price3 + sumD * userPrice.price4 + sumE * userPrice.price5;
                            %>
                            <%= salary %>
                        <% } else { %>
                            No price data available.
                        <% } %>
                    </td>
                    <% } %>
                </tr>
                <% 
                totalA += sumA;
                totalB += sumB;
                totalC += sumC;
                totalD += sumD;
                totalE += sumE;
            } 
            %>
            <tr>
                <td>Total</td>
                <td></td>
                <td></td>
                <td><%= totalA %></td>
                <td><%= totalB %></td>
                <td><%= totalC %></td>
                <td><%= totalD %></td>
                <td><%= totalE %></td>
                <td><%= totalA + totalB + totalC + totalD + totalE %></td>
                <td>
                    <% 
                        let totalSalary = 0;
                        if (allPrices && allPrices.length > 0) {
                            const userPrice = allPrices.find(price => currUser && currUser._id.equals(price.owner._id));
                            
                            if (userPrice) {
                                totalSalary = (totalA * userPrice.price1) +
                                              (totalB * userPrice.price2) +
                                              (totalC * userPrice.price3) +
                                              (totalD * userPrice.price4) +
                                              (totalE * userPrice.price5);
                            } 
                        }
                        if (totalSalary > 0) {
                            %>
                            <%= totalSalary %>
                            <%
                        } else {
                            %>
                            No price data available.
                            <%
                        }
                    %>
                </td>
            </tr>
        </tbody>
    </table>

    <!-- Export to Excel functionality -->
    <script>
        document.getElementById("export-btn-excel").addEventListener("click", function() {
            const table = document.querySelector("table");
            const wb = XLSX.utils.table_to_book(table, { sheet: "Sheet1" });
            XLSX.writeFile(wb, "table_data.xlsx");
        });
    </script>

    <!-- Export to PDF functionality with custom styles -->
    <script>
        document.getElementById("export-btn-pdf").addEventListener("click", function() {
        const { jsPDF } = window.jspdf;
        const doc = new jsPDF({
            orientation: 'landscape' 
        });

        // Custom styles for table in PDF
        doc.autoTable({
            html: 'table',
            styles: {
                font: 'helvetica',
                fontSize: 10,
                lineColor: [0, 0, 0],
                lineWidth: 0.5, 
                cellPadding: 4, 
                halign: 'center',
                valign: 'middle'
            },
            headStyles: {
                fillColor: [255, 255, 255], 
                textColor: [0, 0, 0],
                fontSize: 12,
                fontStyle: 'bold'
            },
            bodyStyles: {
                fillColor: [255, 255, 255],
                textColor: [0, 0, 0] 
            },
            theme: 'grid' 
        });

        // Get the current month (January is 0, December is 11)
        const date = new Date();
        const month = date.toLocaleString('default', { month: 'long' });
        
        const fileName = `dimond_${month}.pdf`;

        doc.save(fileName);
        });

    </script>

</body>
</html>
